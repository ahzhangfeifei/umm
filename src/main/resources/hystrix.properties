# hystrix configuration
# see https://github.com/Netflix/Hystrix/wiki/Configuration
#
#
#===========默认Command===========
#===========\u9ED8\u8BA4Command===========
# 使用命令调用隔离方式,默认:采用线程隔离,ExecutionIsolationStrategy.THREAD
# \u4F7F\u7528\u547D\u4EE4\u8C03\u7528\u9694\u79BB\u65B9\u5F0F,\u9ED8\u8BA4:\u91C7\u7528\u7EBF\u7A0B\u9694\u79BB,ExecutionIsolationStrategy.THREAD
hystrix.command.default.execution.timeout.enabled=true
#
# Possible Values	THREAD, SEMAPHORE
hystrix.command.default.execution.isolation.strategy=THREAD
#
# 使用线程隔离时，调用超时时间，默认:1秒
# \u4F7F\u7528\u7EBF\u7A0B\u9694\u79BB\u65F6\uFF0C\u8C03\u7528\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA4:1\u79D2
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=500
#
#
#===========线程池===========
#===========\u7EBF\u7A0B\u6C60===========
#
# 配置线程池大小,默认值10个.
# \u914D\u7F6E\u7EBF\u7A0B\u6C60\u5927\u5C0F,\u9ED8\u8BA4\u503C10\u4E2A.
hystrix.threadpool.default.coreSize=10
# 建议值:请求高峰时99.5%的平均响应时间 + 向上预留一些即可
# \u5EFA\u8BAE\u503C:\u8BF7\u6C42\u9AD8\u5CF0\u65F699.5%\u7684\u5E73\u5747\u54CD\u5E94\u65F6\u95F4 + \u5411\u4E0A\u9884\u7559\u4E00\u4E9B\u5373\u53EF
#
# 配置线程值等待队列长度,默认值:-1
# \u914D\u7F6E\u7EBF\u7A0B\u503C\u7B49\u5F85\u961F\u5217\u957F\u5EA6,\u9ED8\u8BA4\u503C:-1
hystrix.threadpool.default.maxQueueSize=-1
#
# 线程生存时间
# \u7EBF\u7A0B\u751F\u5B58\u65F6\u95F4
hystrix.threadpool.default.keepAliveTimeMinutes=1
#
#===========熔断器===========
#===========\u7194\u65AD\u5668===========
#
# 熔断器在整个统计时间内是否开启的阀值，默认20秒。也就是10秒钟内至少请求20次，熔断器才发挥起作用
# \u7194\u65AD\u5668\u5728\u6574\u4E2A\u7EDF\u8BA1\u65F6\u95F4\u5185\u662F\u5426\u5F00\u542F\u7684\u9600\u503C\uFF0C\u9ED8\u8BA420\u79D2\u3002\u4E5F\u5C31\u662F10\u79D2\u949F\u5185\u81F3\u5C11\u8BF7\u6C4220\u6B21\uFF0C\u7194\u65AD\u5668\u624D\u53D1\u6325\u8D77\u4F5C\u7528
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
# 熔断器默认工作时间,默认:5秒.熔断器中断请求5秒后会进入半打开状态,放部分流量过去重试
# \u7194\u65AD\u5668\u9ED8\u8BA4\u5DE5\u4F5C\u65F6\u95F4,\u9ED8\u8BA4:5\u79D2.\u7194\u65AD\u5668\u4E2D\u65AD\u8BF7\u6C425\u79D2\u540E\u4F1A\u8FDB\u5165\u534A\u6253\u5F00\u72B6\u6001,\u653E\u90E8\u5206\u6D41\u91CF\u8FC7\u53BB\u91CD\u8BD5
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5
# 默认:50%。当出错率超过50%后熔断器启动.
# \u9ED8\u8BA4:50%\u3002\u5F53\u51FA\u9519\u7387\u8D85\u8FC750%\u540E\u7194\u65AD\u5668\u542F\u52A8.
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
# 是否强制开启熔断器阻断所有请求,默认:false,不开启
# \u662F\u5426\u5F3A\u5236\u5F00\u542F\u7194\u65AD\u5668\u963B\u65AD\u6240\u6709\u8BF7\u6C42,\u9ED8\u8BA4:false,\u4E0D\u5F00\u542F
hystrix.command.default.circuitBreaker.forceOpen=false
# 是否允许熔断器忽略错误,默认false, 不开启
# \u662F\u5426\u5141\u8BB8\u7194\u65AD\u5668\u5FFD\u7565\u9519\u8BEF,\u9ED8\u8BA4false, \u4E0D\u5F00\u542F
hystrix.command.default.circuitBreaker.forceClosed=false
#
#
#===========单个ThreadPool配置=========
#===========\u5355\u4E2AThreadPool\u914D\u7F6E=========
#hystrix.threadpool.IbeAvThreadPool.coreSize=20
#hystrix.threadpool.IbePlusAvThreadPool.coreSize=4
#hystrix.threadpool.IbePlusOpenAvThreadPool.coreSize=20
#hystrix.threadpool.EcAvThreadPool.coreSize=10
#hystrix.threadpool.RealAvPool.coreSize=10
#
#
#===========单个command的配置===========
#===========\u5355\u4E2Acommand\u7684\u914D\u7F6E===========
#hystrix.command.Av.execution.isolation.thread.timeoutInMilliseconds=5000
#hystrix.command.RealAv.execution.isolation.thread.timeoutInMilliseconds=10000
#hystrix.command.Ec.execution.isolation.thread.timeoutInMilliseconds=30000